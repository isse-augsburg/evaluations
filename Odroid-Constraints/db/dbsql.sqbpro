<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="/home/alexander/Documents/Projects/swarm-robotics/swarmrobotics-paper/2016-09-SASO-PositionPaper/Evaluation/EvaluationProject/db/results.db"/><window><current_tab id="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1006"/><expanded_item id="0" parent="-1"/><expanded_item id="1" parent="-1"/><expanded_item id="2" parent="-1"/><expanded_item id="3" parent="-1"/></tab_structure><tab_browse><current_table name="JobResult"/><default_encoding codec=""/><browsetable_info data="AAAAAQAAABIASgBvAGIAUgBlAHMAdQBsAHQAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////"/></tab_browse><tab_sql><sql name="runtimePerNTasks.sql">
Create View RuntimeOne as SELECT jr.nTasks, AVG(jr.ElapsedSecs) as MeanSecs, AVG( (jr.ElapsedSecs - sub.a) * (jr.ElapsedSecs - sub.a) ) as VarSecs
FROM JobResult as jr,
( SELECT jr2.nTasks as nTasks2, AVG(jr2.ElapsedSecs) as a from JobResult as jr2 where jr2.TimeLimit = 60 and jr2.SolverId = 1 group by nTasks) as sub
where TimeLimit = 60 and SolverId = 1 and sub.nTasks2 = jr.nTasks
group by nTasks;

Create View RuntimeTwo as SELECT jr.nTasks, AVG(jr.ElapsedSecs) as MeanSecs, AVG( (jr.ElapsedSecs - sub.a) * (jr.ElapsedSecs - sub.a) ) as VarSecs
FROM JobResult as jr,
( SELECT jr2.nTasks as nTasks2, AVG(jr2.ElapsedSecs) as a from JobResult as jr2 where jr2.TimeLimit = 60 and jr2.SolverId = 2 group by nTasks) as sub
where TimeLimit = 60 and SolverId = 2 and sub.nTasks2 = jr.nTasks
group by nTasks;

Create View RuntimeThree as SELECT jr.nTasks, AVG(jr.ElapsedSecs) as MeanSecs, AVG( (jr.ElapsedSecs - sub.a) * (jr.ElapsedSecs - sub.a) ) as VarSecs
FROM JobResult as jr,
( SELECT jr2.nTasks as nTasks2, AVG(jr2.ElapsedSecs) as a from JobResult as jr2 where jr2.TimeLimit = 60 and jr2.SolverId = 3 group by nTasks) as sub
where TimeLimit = 60 and SolverId = 3 and sub.nTasks2 = jr.nTasks
group by nTasks;

SELECT * FROM
RuntimeOne as ro, RuntimeTwo as rtw, RuntimeThree as rt
where ro.nTasks = rtw.nTasks and rtw.nTasks = rt.nTasks;

 Drop View RuntimeOne; Drop View RuntimeTwo; Drop View RuntimeThree; 
</sql><sql name="optimallyClosed.sql">Drop View ClosedOne; Drop View ClosedTwo;

Create View If not exists ClosedOne as SELECT jr.nTasks, AVG(jr.Optimally) as Closed
FROM JobResult as jr
where TimeLimit = 60 and SolverId = 1
group by nTasks;

Create View If not exists ClosedTwo as SELECT jr.nTasks, AVG(jr.Optimally) as Closed
FROM JobResult as jr
where TimeLimit = 60 and SolverId = 2
group by nTasks;

Select co.nTasks, co.Closed, ct.Closed FROM 
ClosedOne as co, ClosedTwo as ct
Where co.nTasks = ct.nTasks

</sql><sql name="solved.sql">

Create View If not exists SolvedOne as SELECT jr.nTasks, AVG(jr.Solved) as Solved
FROM JobResult as jr
where TimeLimit = 60 and SolverId = 1
group by nTasks;

Create View If not exists SolvedTwo as SELECT jr.nTasks, AVG(jr.Solved) as Solved
FROM JobResult as jr
where TimeLimit = 60 and SolverId = 2
group by nTasks;

Select co.nTasks, co.Solved, ct.Solved FROM 
SolvedOne as co, SolvedTwo as ct
Where co.nTasks = ct.nTasks;

Drop View SolvedOne; Drop View SolvedTwo;</sql><current_tab id="2"/></tab_sql></sqlb_project>
